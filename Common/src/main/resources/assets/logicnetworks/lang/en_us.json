{
  "key.logicnetworks.add_node": "Add Node",
  "key.logicnetworks.delete_node": "Delete Node",
  "category.logicnetworks.graph": "Logic Networks: Node Graph",

  "block.logicnetworks.network_controller": "Network Controller",
  "block.logicnetworks.network_anchor": "Network Anchor",
  "block.logicnetworks.network_cache": "Network Cache",

  "item.logicnetworks.linking_card": "Linking Card",
  "item.logicnetworks.logic_core": "Logic Core",
  "item.logicnetworks.control_circuit": "Control Circuit",
  "item.logicnetworks.wrench": "Wrench",
  "item.logicnetworks.manual": "Logic Networks Manual",

  "itemGroup.logicnetworks:main": "Logic Networks",

  "gui.logicnetworks.manual.title": "Logic Networks Manual",
  "gui.logicnetworks.manual.landing_text": "Insert landing text",

  "gui.logicnetworks.generic.constant": "Constant input",
  "gui.logicnetworks.generic.ticks": "Ticks/operation",
  "gui.logicnetworks.generic.redstone_control": "Redstone control",
  "gui.logicnetworks.generic.clamps": "Clamps the output",
  "gui.logicnetworks.generic.seed": "Random seed",
  "gui.logicnetworks.generic.most_significant": "Most significant bits",
  "gui.logicnetworks.generic.least_significant": "Least significant bits",
  "gui.logicnetworks.generic.min_value": "Minimum value",
  "gui.logicnetworks.generic.max_value": "Maximum value",
  "gui.logicnetworks.generic.tick_seed": "Randomize every tick",
  "gui.logicnetworks.generic.time_of_day": "Ticks 0-23999",
  "gui.logicnetworks.generic.anchor_link": "Anchor link",
  "gui.logicnetworks.generic.first_index": "First index",
  "gui.logicnetworks.generic.start_index": "Start index",
  "gui.logicnetworks.generic.end_index": "End index",
  "gui.logicnetworks.generic.substring": "Substring",
  "gui.logicnetworks.generic.target": "Target",
  "gui.logicnetworks.generic.replace_with": "Replace with",
  "gui.logicnetworks.generic.key": "Key",
  "gui.logicnetworks.generic.value": "Value",
  "gui.logicnetworks.generic.index": "Index",
  "gui.logicnetworks.generic.append": "Append",
  "gui.logicnetworks.generic.block_id": "Block ID",
  "gui.logicnetworks.generic.block_state": "Block state",

  "gui.logicnetworks.generic.bit_zero": "2^0 bit",
  "gui.logicnetworks.generic.bit_one": "2^1 bit",
  "gui.logicnetworks.generic.bit_two": "2^2 bit",
  "gui.logicnetworks.generic.bit_three": "2^3 bit",

  "gui.logicnetworks.side.up": "U",
  "gui.logicnetworks.side.down": "D",
  "gui.logicnetworks.side.north": "N",
  "gui.logicnetworks.side.south": "S",
  "gui.logicnetworks.side.east": "E",
  "gui.logicnetworks.side.west": "W",

  "gui.logicnetworks.redstone_control.always": "Always active",
  "gui.logicnetworks.redstone_control.high": "Active with redstone signal",
  "gui.logicnetworks.redstone_control.low": "Active without redstone signal",
  "gui.logicnetworks.redstone_control.never": "Never active",

  "gui.logicnetworks.link.linked_to": "Linked to: %s",
  "gui.logicnetworks.link.linked_side": "Side: %s",
  "gui.logicnetworks.link.valid": "Ready",
  "gui.logicnetworks.link.unloaded": "Unloaded",
  "gui.logicnetworks.link.destroyed": "Removed",
  "gui.logicnetworks.link.invalid": "Invalid",

  "gui.logicnetworks.network_anchor.title": "Network Anchor",
  "gui.logicnetworks.network_anchor.name_tooltip": "Anchor name",

  "gui.logicnetworks.network_controller.title": "Network Controller",
  "gui.logicnetworks.network_controller.ticks_per_operation": "Ticks per operation",
  "gui.logicnetworks.network_controller.edit_network": "Edit network",
  "gui.logicnetworks.network_controller.edit_network_tooltip": "Open the graph editor",
  "gui.logicnetworks.network_graph.title": "Network Graph",

  "gui.logicnetworks.signals.integer": "[Integer]",
  "gui.logicnetworks.signals.long": "[Long]",
  "gui.logicnetworks.signals.analog": "[Analog 0-15]",
  "gui.logicnetworks.signals.boolean": "[Boolean]",
  "gui.logicnetworks.signals.string": "[String]",
  "gui.logicnetworks.signals.nbt": "[NBT]",
  "gui.logicnetworks.signals.list": "[List]",

  "gui.logicnetworks.nodes.cache_read": "Cache Read",
  "gui.logicnetworks.nodes.cache_write": "Cache Write",
  "gui.logicnetworks.nodes.block_info": "Block Info",

  "gui.logicnetworks.nodes.equals": "Equals",
  "gui.logicnetworks.nodes.greater_than": "Greater Than",
  "gui.logicnetworks.nodes.less_than": "Less Than",
  "gui.logicnetworks.nodes.integer_constant": "Integer Constant",
  "gui.logicnetworks.nodes.integer_max": "Max",
  "gui.logicnetworks.nodes.integer_min": "Min",
  "gui.logicnetworks.nodes.integer_add": "Add",
  "gui.logicnetworks.nodes.integer_subtract": "Subtract",
  "gui.logicnetworks.nodes.integer_multiply": "Multiply",
  "gui.logicnetworks.nodes.integer_exponent": "Exponent",
  "gui.logicnetworks.nodes.integer_divide": "Divide",
  "gui.logicnetworks.nodes.integer_modulo": "Modulo",
  "gui.logicnetworks.nodes.integer_absolute": "Abs",
  "gui.logicnetworks.nodes.integer_negate": "Negate",
  "gui.logicnetworks.nodes.integer_clamp": "Clamp",

  "gui.logicnetworks.nodes.current_tick": "Current Tick",
  "gui.logicnetworks.nodes.day_time": "Day Time",
  "gui.logicnetworks.nodes.random": "Random",
  "gui.logicnetworks.nodes.long_pack": "Long Pack",
  "gui.logicnetworks.nodes.long_unpack": "Long Unpack",

  "gui.logicnetworks.nodes.analog_read": "Analog Read",
  "gui.logicnetworks.nodes.analog_write": "Analog Write",
  "gui.logicnetworks.nodes.analog_constant": "Analog Constant",
  "gui.logicnetworks.nodes.analog_invert": "Analog Invert",
  "gui.logicnetworks.nodes.analog_pack": "Analog Pack",
  "gui.logicnetworks.nodes.analog_unpack": "Analog Unpack",

  "gui.logicnetworks.nodes.bitwise_not": "Bitwise Not",
  "gui.logicnetworks.nodes.bitwise_and": "Bitwise AND",
  "gui.logicnetworks.nodes.bitwise_or": "Bitwise OR",
  "gui.logicnetworks.nodes.bitwise_xor": "Bitwise XOR",
  "gui.logicnetworks.nodes.bitwise_nand": "Bitwise NAND",
  "gui.logicnetworks.nodes.bitwise_nor": "Bitwise NOR",
  "gui.logicnetworks.nodes.bitwise_xnor": "Bitwise XNOR",

  "gui.logicnetworks.nodes.boolean_read": "Boolean Read",
  "gui.logicnetworks.nodes.boolean_write": "Boolean Write",
  "gui.logicnetworks.nodes.boolean_constant": "Boolean Constant",
  "gui.logicnetworks.nodes.boolean_invert": "NOT",
  "gui.logicnetworks.nodes.boolean_and": "AND",
  "gui.logicnetworks.nodes.boolean_or": "OR",
  "gui.logicnetworks.nodes.boolean_xor": "XOR",
  "gui.logicnetworks.nodes.boolean_nand": "NAND",
  "gui.logicnetworks.nodes.boolean_nor": "NOR",
  "gui.logicnetworks.nodes.boolean_xnor": "XNOR",

  "gui.logicnetworks.nodes.string_constant": "String Constant",
  "gui.logicnetworks.nodes.string_length": "String Length",
  "gui.logicnetworks.nodes.string_equals": "String Equals",
  "gui.logicnetworks.nodes.string_contains": "String Contains",
  "gui.logicnetworks.nodes.string_substring": "Substring",
  "gui.logicnetworks.nodes.string_replace": "Replace",
  "gui.logicnetworks.nodes.string_join": "Join",
  "gui.logicnetworks.nodes.string_to_lower": "To Lowercase",
  "gui.logicnetworks.nodes.string_to_upper": "To Uppercase",

  "gui.logicnetworks.nodes.empty_nbt_tag": "Empty NBT Tag",
  "gui.logicnetworks.nodes.nbt_read": "NBT Read",
  "gui.logicnetworks.nodes.nbt_get_compound": "Get Compound",
  "gui.logicnetworks.nodes.nbt_get_string": "Get String",
  "gui.logicnetworks.nodes.nbt_get_integer": "Get Integer",
  "gui.logicnetworks.nodes.nbt_get_long": "Get Long",
  "gui.logicnetworks.nodes.nbt_get_boolean": "Get Boolean",
  "gui.logicnetworks.nodes.nbt_get_list": "Get List",
  "gui.logicnetworks.nodes.nbt_put_compound": "Put Compound",
  "gui.logicnetworks.nodes.nbt_put_string": "Put String",
  "gui.logicnetworks.nodes.nbt_put_integer": "Put Integer",
  "gui.logicnetworks.nodes.nbt_put_long": "Put Long",
  "gui.logicnetworks.nodes.nbt_put_boolean": "Put Boolean",
  "gui.logicnetworks.nodes.nbt_put_list": "Put List",

  "gui.logicnetworks.nodes.empty_list": "Empty List",
  "gui.logicnetworks.nodes.list_length": "Length",
  "gui.logicnetworks.nodes.list_equals": "List Equals",
  "gui.logicnetworks.nodes.list_contains": "Contains",
  "gui.logicnetworks.nodes.list_remove": "Remove",
  "gui.logicnetworks.nodes.list_get_compound": "List Get Compound",
  "gui.logicnetworks.nodes.list_get_string": "List Get String",
  "gui.logicnetworks.nodes.list_get_integer": "List Get Integer",
  "gui.logicnetworks.nodes.list_get_long": "List Get Long",
  "gui.logicnetworks.nodes.list_get_boolean": "List Get Boolean",
  "gui.logicnetworks.nodes.list_add_compound": "Add Compound",
  "gui.logicnetworks.nodes.list_add_string": "Add String",
  "gui.logicnetworks.nodes.list_add_integer": "Add Integer",
  "gui.logicnetworks.nodes.list_add_long": "Add Long",
  "gui.logicnetworks.nodes.list_add_boolean": "Add Boolean"
}